#https://medium.com/@nydiarra/secure-a-spring-boot-rest-api-with-json-web-token-reference-to-angular-integration-e57a25806c50
#https://geowarin.github.io/social-login-with-spring.html
#https://github.com/ozgengunay/FBSpringSocialRESTAuth
#https://sdqali.in/blog/2016/07/02/jwt-authentication-with-spring-web---part-1/
#https://auth0.com/blog/securing-spring-boot-with-jwts/
#https://github.com/lynas/spring-security-jwt-rest-stateless
#http://www.tinmegali.com/en/oauth2-using-spring/

spring.social.twitter.appId=uo5a0tetF8lCurxNmmyZS3IxA
spring.social.twitter.appSecret=hP0o4UDeJaNO2LUuZlyuwWTi89bhCVBbnpyxpXvmoJVF2QMMeX

# Disable auto views, we are making an API
spring.social.auto-connection-views=false
# Disable basic security
security.basic.enabled=false
# Persist H2 data to disk to keep connection info between reboots
spring.datasource.url=jdbc:h2:~/social-test
server.address=0.0.0.0
server.port=3000
spring.jpa.generate-ddl=true
spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=my-schema.sql
spring.jpa.show-sql = true
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
##spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
##spring.jpa.hibernate.ddl-auto = update
#
##javax.persistence.schema-generation.create-source=metadata
##javax.persistence.schema-generation.scripts.action=create
##javax.persistence.schema-generation.scripts.create-target=my-schema.sql

logging.level.com.tinmegali.oauth2=DEBUG
logging.level.org.springframework.data=WARN
logging.level.org.springframework.security.oauth2=DEBUG
security.oauth2.resource.id=oauth2_id
